# Maintainer: Nicola Fontana <ntd@entidi.it>
#
# Port of the Fedora package found at
# http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/

pkgname=fedora-mingw-w64-glib2
pkgver=2.39.90
pkgrel=2
pkgdesc='Common C routines used by GTK+ and other libs (mingw-w64)'
arch=(any)
url='http://www.gtk.org/'
license=(LGPL)
groups=(fedora-mingw)
depends=(mingw-w64-crt mingw-w64-libffi mingw-w64-zlib mingw-w64-gettext)
makedepends=(mingw-w64-gcc mingw-w64-pkg-config 'glib2>=2.31.20')
provides=(mingw-w64-glib2=$pkgver)
conflicts=(mingw-w64-glib2)
options=(!strip staticlibs !buildflags)
source=("http://ftp.gnome.org/pub/GNOME/sources/glib/${pkgver%.*}/glib-$pkgver.tar.xz"
        "http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/plain/0001-Use-CreateFile-on-Win32-to-make-sure-g_unlink-always.patch?h=f18"
        "http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/plain/glib-send-log-messages-to-correct-stdout-and-stderr.patch?id=d2262b6ca2230b2dc169aa4798b59e645859a195"
        "http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/plain/glib-prefer-constructors-over-DllMain.patch?id=10ce51e70078f0c5b76d3ee1582d75e43f7f3363"
        "http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/plain/glib-commit-9cb5385.patch?id=e531c1c3f4af96684eb93e397efa7f54965a3502")
md5sums=('093029dfbda10dfc6a5e5d951373c4dc'
         'c08c41118f5318d10f326c7c30e1a33a'
         '7b065f9bc154bf996523974a698b24de'
         '46969e815f3ab19582ba33667a52048b'
         '09050e72765d629c305b9671e04d16e8')

_architectures=(i686-w64-mingw32 x86_64-w64-mingw32)

build() {
  # glib2 != glib, so hardcoding it in $tardir
  local tardir="$srcdir/glib-$pkgver"
  local builddir
  local arch

  # Apply patches from fedora repository
  cd "$tardir"
  patch -Np1 < '../0001-Use-CreateFile-on-Win32-to-make-sure-g_unlink-always.patch?h=f18'

  # By default g_log_default_handler always assumes that stdout and stderr
  # are file descriptors 1 and 2. On Win32 this isn't always the case as the
  # win32 API function AttachConsole can be used to dynamically attach GUI
  # applications to a console and the file descriptors of stderr and stdout
  # will become different than 1 and 2
  # https://bugzilla.gnome.org/show_bug.cgi?id=692085
  patch -Np0 < '../glib-send-log-messages-to-correct-stdout-and-stderr.patch?id=d2262b6ca2230b2dc169aa4798b59e645859a195'

  # Prefer the use of GCC constructors over DllMain
  # This prevents having to depend on DllMain in static libraries
  # http://lists.fedoraproject.org/pipermail/fedora-mingw/2013-March/006429.html
  patch -Np1 < '../glib-prefer-constructors-over-DllMain.patch?id=10ce51e70078f0c5b76d3ee1582d75e43f7f3363'

  # Fix build on Windows
  patch -Np1 < '../glib-commit-9cb5385.patch?id=e531c1c3f4af96684eb93e397efa7f54965a3502'

  export CFLAGS='-O2 -pipe'
  export CXXFLAGS="$CFLAGS"
  unset  LDFLAGS
  unset  CPPFLAGS

  for arch in ${_architectures[@]}; do
    # GLib can't build static and shared libraries in one go, so we build GLib twice
    builddir="$srcdir/$pkgname-$pkgver-build-$arch"
    mkdir -p "$builddir-static"
    cd "$builddir-static"
    "$tardir/configure" \
      --build="$CHOST" \
      --prefix="/usr/$arch" \
      --host="$arch" \
      --disable-shared \
      --enable-static
    make V=1
    mkdir -p "$builddir-shared"
    cd "$builddir-shared"
    "$tardir/configure" \
      --build="$CHOST" \
      --prefix="/usr/$arch" \
      --host="$arch" \
      --enable-shared \
      --disable-static
    make
  done
}

package() {
  local arch
  local builddir
  local prefix

  # The shared version is the last installed so its glibconfig.h is the default one.
  # Developers using the static build of GLib need to add -DGLIB_STATIC_COMPILATION
  # and -DGOBJECT_STATIC_COMPILATION to their CFLAGS to avoid compile failures.
  for arch in ${_architectures[@]}; do
    builddir="$srcdir/$pkgname-$pkgver-build-$arch"
    prefix="$pkgdir/usr/$arch"
    cd "$builddir-static"
    make DESTDIR="$pkgdir" install
    cd "$builddir-shared"
    make DESTDIR="$pkgdir" install

    find "$prefix" -regex '.*\.\(bat\|def\|exp\)' -exec rm -f {} +
    find "$prefix" -name '*.dll' -exec $arch-strip -xg {} +
    find "$prefix" -name '*.a' -exec $arch-strip -g {} +
    rm -fr "$prefix/share/bash-completion"
    rm -fr "$prefix/share/gdb"
    rm -fr "$prefix/share/man"
    rm -f  "$prefix/bin/gdbus-codegen"
    rm -fr "$prefix/lib/gdbus-2.0"
  done
}

# vim:set ts=2 sw=2 et:
