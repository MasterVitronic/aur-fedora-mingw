# Maintainer: Nicola Fontana <ntd@entidi.it>
#
# Port of the Fedora package found at
# http://pkgs.fedoraproject.org/cgit/mingw-libjpeg-turbo.git/

pkgname=fedora-mingw-w64-libjpeg-turbo
pkgver=1.3.0
pkgrel=2
pkgdesc='libjpeg derivative with accelerated baseline JPEG compression and decompression (mingw-w64)'
arch=(any)
url='http://libjpeg-turbo.virtualgl.org/'
license=(GPL custom)
groups=(fedora-mingw)
depends=(mingw-w64-crt)
makedepends=(mingw-w64-gcc cmake nasm)
provides=("mingw-w64-libjpeg=8.0.2")
conflicts=(mingw-w64-libjpeg)
options=(!strip !buildflags !libtool)
source=("http://downloads.sourceforge.net/project/libjpeg-turbo/$pkgver/libjpeg-turbo-$pkgver.tar.gz"
        "http://pkgs.fedoraproject.org/cgit/mingw-libjpeg-turbo.git/plain/libjpeg-turbo-match-autoconf-behavior.patch?id=8f8b58073df47e55a74d1e62453ce17875a0d475"
        "Toolchain-i686-w64-mingw32.cmake"
        "Toolchain-x86_64-w64-mingw32.cmake")
md5sums=('e1e65cc711a1ade1322c06ad4a647741'
         '6b00863ecdd729cb757e7f3672324f6f'
         '93f31089ff2069c9ac1eddd387d79616'
         'd618536e69bcbff2daab3897014a5eeb')

_architectures=(i686-w64-mingw32 x86_64-w64-mingw32)

build() {
  local tardir="$srcdir/${pkgname#fedora-mingw-w64-}-$pkgver"
  local builddir
  local arch

  export CFLAGS='-O2 -pipe'
  export CXXFLAGS="$CFLAGS"
  unset  LDFLAGS
  unset  CPPFLAGS

  # Apply patches from fedora repository
  cd "$tardir"

  # Make jconfig.h more autoconf friendly
  # https://bugzilla.redhat.com/show_bug.cgi?id=843193
  patch -Np1 < '../libjpeg-turbo-match-autoconf-behavior.patch?id=8f8b58073df47e55a74d1e62453ce17875a0d475'

  for arch in ${_architectures[@]}; do
    builddir="$srcdir/$pkgname-$pkgver-build-$arch"
    mkdir -p "$builddir"
    cd "$builddir"
    cmake "$tardir" \
      -DCMAKE_INSTALL_PREFIX:PATH="/usr/$arch" \
      -DCMAKE_INSTALL_LIBDIR:PATH="/usr/$arch/lib" \
      -DINCLUDE_INSTALL_DIR:PATH="/usr/$arch/include" \
      -DLIB_INSTALL_DIR:PATH="/usr/$arch/lib" \
      -DSYSCONF_INSTALL_DIR:PATH="/usr/$arch/etc" \
      -DSHARE_INSTALL_PREFIX:PATH="/usr/$arch/share" \
      -DBUILD_SHARED_LIBS:BOOL=ON \
      -DCMAKE_TOOLCHAIN_FILE="$srcdir/Toolchain-$arch.cmake"
    make
  done
}

package() {
  local arch
  local prefix

  for arch in ${_architectures[@]}; do
    prefix="$pkgdir/usr/$arch"

    cd "$srcdir/$pkgname-$pkgver-build-$arch"
    make DESTDIR="$pkgdir" install

    find "$prefix" -regex '.*\.\(exe\|bat\|def\|exp\)' -exec rm -f {} +
    find "$prefix" -name '*.dll' -exec $arch-strip -xg {} +
    find "$prefix" -name '*.a' -exec $arch-strip -g {} +
    rm -fr "$prefix/doc"
  done
}

# vim:set ts=2 sw=2 et:
