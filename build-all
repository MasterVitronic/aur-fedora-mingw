#! /bin/bash
#
# Builds all the GTK+ MinGW toolchain skipping the packages that
# have been previously compiled (that is, the directories still
# containing a .pkg.tar.xz file).
#
# A serie of packages to skip can be optionally specified
# on the command line. For example, the following command
# will build everything but binutils and cairo:
#
# ./build-all fedora-mingw-w64-binutils fedora-mingw-w64-cairo

root="$(dirname $0)"

function found() {
    local needle="$1"
    shift
    while : ; do
	haystack=$1
	shift || return 1
	[[ "$haystack" = "$needle" ]] && return 0
    done
}

pkgs=(	mingw-w64-gcc
	mingw-w64-pkg-config
	fedora-mingw-w64-zlib
	fedora-mingw-w64-bzip2
	fedora-mingw-w64-termcap
	fedora-mingw-w64-win-iconv
	fedora-mingw-w64-gettext
	fedora-mingw-w64-expat
	fedora-mingw-w64-libxml2
	fedora-mingw-w64-libpng
	fedora-mingw-w64-libjpeg-turbo
	fedora-mingw-w64-libffi
	fedora-mingw-w64-glib2
	fedora-mingw-w64-freetype
	fedora-mingw-w64-fontconfig
	fedora-mingw-w64-pixman
	fedora-mingw-w64-icu
	mingw-w64-tools
	fedora-mingw-w64-cairo
	fedora-mingw-w64-gdk-pixbuf
	fedora-mingw-w64-atk
	fedora-mingw-w64-harfbuzz
	fedora-mingw-w64-pango
	fedora-mingw-w64-gtk2
	fedora-mingw-w64-gtk3
	fedora-mingw-w64-nsis)

for pkg in ${pkgs[@]}; do
	found "$pkg" "$@" && continue
	if [ ! -d "$pkg" ]; then
	    # No package directory found: try to build from AUR
	    if ! yaourt -Sa --noconfirm "$pkg"; then exit 1; fi
	elif [ -z "$(find "$pkg" -maxdepth 1 -name '*.pkg.tar.xz')" ]; then
	    # The directory exists and does not contain any .pkg.tar.xz
	    # file: build the package with makepkg
	    cd "$pkg"
	    makepkg -f

	    # TODO: is there a more elegant way to force the removing
	    #       of conflicting packages?
	    if ! yes | LANG= yaourt -U *.pkg.tar.xz; then exit 1; fi

	    # The tarball links (*.pkg.tar.xz) are not deleted: it is
	    # convenient to keep the on place to easily update package
	    # databases, i.e. using a command such as
	    # repo-add <path-to-db> */*.pkg.tar.xz
	    rm -fr pkg src
	    cd ..
	fi
done
