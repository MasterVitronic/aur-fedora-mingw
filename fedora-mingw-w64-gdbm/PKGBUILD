# Maintainer: Nicola Fontana <ntd@entidi.it>
#
# Port of the Fedora package found at
# http://pkgs.fedoraproject.org/cgit/mingw-gdbm/

pkgname=fedora-mingw-w64-gdbm
pkgver=1.11
pkgrel=1
pkgdesc='GNU database library (mingw-w64)'
arch=(any)
url='http://www.gnu.org/software/gdbm/gdbm.html'
license=(GPL3)
groups=(fedora-mingw)
depends=(mingw-w64-crt)
makedepends=(mingw-w64-gcc mingw-w64-pkg-config autoconf automake libtool)
provides=(mingw-w64-gdbm=$pkgver)
conflicts=(mingw-w64-gdbm)
options=(!strip staticlibs !buildflags)
source=("ftp://ftp.gnu.org/gnu/gdbm/gdbm-${pkgver}.tar.gz"
        "http://pkgs.fedoraproject.org/cgit/mingw-gdbm.git/plain/gdbm-1.10-zeroheaders.patch?id=bb79be204c8f521ee1322c6bebedac571c236f00"
        "http://pkgs.fedoraproject.org/cgit/mingw-gdbm.git/plain/gdbm-win32-support.patch?id=bb79be204c8f521ee1322c6bebedac571c236f00")
md5sums=('72c832680cf0999caedbe5b265c8c1bd'
         'ac255b10452005237836cd2d3a470733'
         'eb46af0a7d4360526f9a39f181d1af21')

_architectures=(i686-w64-mingw32 x86_64-w64-mingw32)

prepare() {
  cd gdbm-${pkgver}

  # Prevent gdbm from storing uninitialized memory content
  # to database files.
  # The change allows Valgrind users to debug their packages without
  # dealing with gdbm-related noise. It also improves security, as
  # the uninitialized memory might contain sensitive informations
  # from other applications. The patch is taken from Debian.
  # See https://bugzilla.redhat.com/show_bug.cgi?id=4457
  # See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=208927
  patch -Np1 < '../gdbm-1.10-zeroheaders.patch?id=bb79be204c8f521ee1322c6bebedac571c236f00'

  # Win32 compatibility
  patch -Np0 < '../gdbm-win32-support.patch?id=bb79be204c8f521ee1322c6bebedac571c236f00'

  autoreconf -if
}

build() {
  local tardir="$srcdir/${pkgname#fedora-mingw-w64-}-$pkgver"
  local builddir
  local arch

  unset LDFLAGS CPPFLAGS

  for arch in ${_architectures[@]}; do
    builddir="$srcdir/$pkgname-$pkgver-build-$arch"
    mkdir -p "$builddir"
    cd "$builddir"
    "$tardir/configure" \
      --build="$CHOST" \
      --prefix="/usr/$arch" \
      --host="$arch" \
      --enable-shared \
      --enable-static
    make V=1
  done
}

package() {
  local arch
  local prefix

  for arch in ${_architectures[@]}; do
    prefix="$pkgdir/usr/$arch"

    cd "$srcdir/$pkgname-$pkgver-build-$arch"
    make DESTDIR="$pkgdir" install

    find "$prefix" -regex '.*\.\(exe\|bat\|def\|exp\)' -exec rm -f {} +
    find "$prefix" -name '*.dll' -exec $arch-strip -xg {} +
    find "$prefix" -name '*.a' -exec $arch-strip -g {} +
    rm -fr "$prefix/share"
  done
}

# vim:set ts=2 sw=2 et:
