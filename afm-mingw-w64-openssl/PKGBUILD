# Maintainer: Nicola Fontana <ntd@entidi.it>
# Maintainer: Alexey Pavlov <Alexpux@gmail.com>
#
# This is an adaptation of the MinGW package by Alexpux found on GitHub:
# https://github.com/Alexpux/MINGW-packages/tree/master/mingw-w64-openssl

_realname=openssl
pkgname="afm-mingw-w64-${_realname}"
pkgver=1.0.2
pkgrel=1
pkgdesc="The Open Source toolkit for Secure Sockets Layer and Transport Layer Security (mingw-w64)"
arch=(any)
url='https://www.openssl.org'
license=('custom:BSD')
groups=(fedora-mingw)
depends=(mingw-w64-crt fedora-mingw-w64-zlib)
makedepends=(afm-mingw-w64-makedepends)
provides=(mingw-w64-openssl=$pkgver)
conflicts=(mingw-w64-openssl)
options=(!strip staticlibs !buildflags)
# Using a mirror because the tarball is not found at the official URL
source=("http://mirror.switch.ch/ftp/mirror/openssl/source/${_realname}-$pkgver.tar.gz"
        "openssl-1.0.0a-ldflags.patch"
        "openssl-1.0.0d-windres.patch"
        "openssl-1.0.1-parallel-build.patch"
        "openssl-1.0.1-x32.patch"
        "openssl-0.9.6-x509.patch"
        "openssl-1.0.1i-relocation.patch")
md5sums=('38373013fc85c790aabf8837969c5eba'
         '9e0abad8dd17079815d9e92345c5adcb'
         '835a78dbe9c8690dbdd9190aaf5432e7'
         '12b97a21380bd471d0c9705e7dc8a23b'
         'f10e6de3515a15128faae808287a8c84'
         'cae4eea6db48a254653fd1903cfabd15'
         'd8ed0865f35216a5e420e37d7a4e2515')

_architectures=(i686-w64-mingw32 x86_64-w64-mingw32)

prepare() {
  cd "$srcdir/${_realname}-$pkgver"

  patch -p1 -i ../openssl-1.0.0a-ldflags.patch
  patch -p1 -i ../openssl-1.0.0d-windres.patch
  patch -p1 -i ../openssl-1.0.1-parallel-build.patch
  patch -p1 -i ../openssl-1.0.1-x32.patch
  patch -p1 -i ../openssl-0.9.6-x509.patch
  patch -p1 -i ../openssl-1.0.1i-relocation.patch

  # Use default CFLAGS instead of hardcoded ones
  sed -i -e '/^"mingw"/ s/-fomit-frame-pointer -O3 -march=i486 -Wall/-O2 -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4/' Configure
}

build() {
  local tardir="$srcdir/${_realname}-$pkgver"
  local builddir
  local arch
  local _target

  unset LDFLAGS CPPFLAGS

  for arch in ${_architectures[@]}; do
    builddir="$srcdir/$pkgname-$pkgver-build-$arch"
    mkdir -p "$builddir"
    # No support for out-of-source builds
    cp -a "$tardir"/* "$builddir"
    [ $arch = x86_64-w64-mingw32 ] && _target=mingw64 || _target=mingw
    cd "$builddir"
    ./Configure \
      --cross-compile-prefix="$arch-" \
      --prefix="/usr/$arch" \
      --openssldir="/usr/$arch/etc/ssl" \
      --libdir=lib \
      ${_target} \
      shared \
      zlib-dynamic \
      enable-camellia \
      enable-idea \
      enable-mdc2 \
      enable-tlsext \
      enable-rfc3779
    make -j1 ZLIB_INCLUDE="-I/usr/$arch/include" depend all
  done
}

package() {
  local arch
  local prefix

  for arch in ${_architectures[@]}; do
    prefix="$pkgdir/usr/$arch"

    cd "$srcdir/$pkgname-$pkgver-build-$arch"
    make -j1 INSTALL_PREFIX="$pkgdir" install

    find "$prefix" -regex '.*\.\(exe\|bat\|def\|exp\)' -exec rm -f {} +
    find "$prefix" -name '*.dll' -exec $arch-strip -xg {} +
    find "$prefix" -name '*.a' -exec $arch-strip -g {} +
    rm -fr "$prefix/share"
  done
}

# vim:set ts=2 sw=2 et:
