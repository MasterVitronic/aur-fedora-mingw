# Maintainer: Nicola Fontana <ntd@entidi.it>

_realname=gobject-introspection
pkgname="afm-mingw-w64-${_realname}-git"
pkgver=1.50.0
pkgrel=1
pkgdesc='Introspection system for GObject-based libraries (mingw-w64)'
arch=(any)
url='https://wiki.gnome.org/Projects/GObjectIntrospection'
license=(LGPL GPL)
groups=(aur-fedora-mingw)
depends=(mingw-w64-crt fedora-mingw-w64-glib2 python2)
makedepends=(git afm-mingw-w64-makedepends wine)
provides=("mingw-w64-${_realname}")
conflicts=("mingw-w64-${_realname}")
options=(!strip staticlibs !buildflags)
source=("http://ftp.gnome.org/pub/GNOME/sources/${_realname}/${pkgver%.*}/${_realname}-$pkgver.tar.xz"
        "0003-Allow-overriding-of-the-host-os-name.patch"
        "0007-Allow-to-skip-the-check-for-Python-headers.patch"
        "0008-Overcome-File-name-too-long-error.patch"
        "0009-Customize-CCompiler-on-MinGW-cross-compilation.patch"
        "winewrapper")
md5sums=('5af8d724f25d0c9cfbe6df41b77e5dc0'
         '3183cc3a8a14338f27830f0ebb66d408'
         '1420edbbec79268a490b0f781a4dacd9'
         '9fc71145c77b0688c0c28616fbef8d7a'
         '7b4be4221fd52104bc69bee42255742c'
         'ee07cea6a2f3b351ea5f873c8a569fd6')

_architectures=(i686-w64-mingw32 x86_64-w64-mingw32)

prepare() {
  cd "$srcdir/${_realname}-$pkgver"

  # https://bugzilla.gnome.org/show_bug.cgi?id=761985
  patch -Np1 < '../0003-Allow-overriding-of-the-host-os-name.patch'

  patch -Np1 < '../0007-Allow-to-skip-the-check-for-Python-headers.patch'
  patch -Np1 < '../0008-Overcome-File-name-too-long-error.patch'
  patch -Np1 < '../0009-Customize-CCompiler-on-MinGW-cross-compilation.patch'

  NOCONFIGURE=1 ./autogen.sh

  # Clear environment trees created by wine
  rm -fr "$srcdir/win32" "$srcdir/win64"
}

build() {
  local tardir="$srcdir/${_realname}-$pkgver"
  local builddir
  local arch
  local bits

  # Force the use of the python-2 interpreter
  export PYTHON=/usr/bin/python2

  for arch in ${_architectures[@]}; do
    builddir="$tardir-build-$arch"
    mkdir -p "$builddir"
    cd "$builddir"

    # Build the python module with build == host
    "$tardir/configure" \
      --disable-silent-rules \
      --enable-shared \
      --enable-static
    make scannerparser.c _giscanner.la

    # Cross-compile the rest of the package inside a subshell so
    # there will not be environment variable leaks from $arch-configure.
    # The $arch-configure script comes from afm-mingw-w64-makedepends.
    (
      source $arch-configure "$tardir" \
        --host="$arch" \
        --disable-silent-rules \
        --enable-shared \
        --enable-static \
        --disable-doctool \
        --disable-giscanner

      # Avoid overriding what built with build == host
      make -t scannerparser.c _giscanner.la

      make
    )
  done
}

package() {
  local arch
  local prefix

  for arch in ${_architectures[@]}; do
    prefix="$pkgdir/usr/$arch"

    cd "$srcdir/${_realname}-$pkgver-build-$arch"
    make DESTDIR="$pkgdir" install

    # Wrappers for running g-ir-compiler and g-ir-generate with wine
    sed \
      -e "s|@arch@|win$bits|g" \
      -e "s|@exe@|/usr/$arch/bin/g-ir-compiler.exe|g" \
      "$srcdir/winewrapper" > "$prefix/bin/g-ir-compiler"
    chmod 0755 "$prefix/bin/g-ir-compiler"
    sed \
      -e "s|@arch@|win$bits|g" \
      -e "s|@exe@|/usr/$arch/bin/g-ir-compiler.exe|g" \
      "$srcdir/winewrapper" > "$prefix/bin/g-ir-generate"
    chmod 0755 "$prefix/bin/g-ir-generate"

    # Substitute the wrappers to the exe in the pkg-config files
    sed -i \
      -e 's|g-ir-compiler.exe|g-ir-compiler|g' \
      -e 's|g-ir-generate.exe|g-ir-generate|g' \
      $prefix/lib/pkgconfig/gobject-introspection-1.0.pc

    find "$prefix" -regex '.*\.\(bat\|def\|exp\)' -exec rm -f {} +
    find "$prefix" -name '*.dll' -exec $arch-strip --strip-unneeded {} +
    find "$prefix" -name '*.a' -exec $arch-strip -g {} +
    rm -fr "$prefix/share/man"
    rm -fr "$prefix/share/aclocal"
  done
}

# vim:set ts=2 sw=2 et:
