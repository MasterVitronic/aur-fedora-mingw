# Maintainer: Nicola Fontana <ntd@entidi.it>

_realname=gobject-introspection
pkgname="afm-mingw-w64-${_realname}-git"
pkgver=1.46.0.r113.cd355e8
pkgrel=2
pkgdesc='Introspection system for GObject-based libraries (mingw-w64)'
arch=(any)
url='https://live.gnome.org/GObjectIntrospection'
license=(LGPL GPL)
groups=(fedora-mingw)
depends=(mingw-w64-crt fedora-mingw-w64-glib2 python2)
makedepends=(git afm-mingw-w64-makedepends wine)
provides=("mingw-w64-${_realname}")
conflicts=("mingw-w64-${_realname}")
options=(!strip staticlibs !buildflags)
source=("git+git://git.gnome.org/gobject-introspection"
        "0001-Use-PKG_CONFIG-when-running-g-ir-scanner.patch"
        "0002-Use-pkg-config-to-get-python2-flags.patch"
        "0003-Pass-to-python-the-proper-path-separator.patch"
        "0004-Allow-overriding-of-dlltool-name.patch"
        "0005-Allow-overriding-of-the-host-os-name.patch"
        "0006-Remove-leading-SHELL-in-libtool-call.patch"
        "0007-Assume-gcc-use-the-same-path-separator-as-python.patch"
        "0008-Use-a-launcher-to-execute-g-ir-scanner.patch"
        "0009-Allow-to-skip-the-check-for-Python-headers.patch"
        "0010-Overcome-File-name-too-long-error.patch"
        "0011-Customize-CCompiler-on-MinGW-cross-compilation.patch"
        "winewrapper")
md5sums=('SKIP'
         'a616f8733b3fc7d786073ccbe4fc54b1'
         '59cba33c232bac91c4526895cba0446a'
         'abed4411076d6a13039d9d6590439357'
         'efbe35b9168198948cc2a77761252ea6'
         '4ef8807b57472493fc24c317fc6aea58'
         'b6184c2b9e6c7ae2b6261b5326a9aee7'
         '6c1fac36391131416b65fddc2a6d2d45'
         '96da144fd4507ccdfb0d31eae3271b09'
         '1e852b53c748990c9a0f4b2371746456'
         'f3cf76724d0d99497f49693099bb9f3d'
         'c3bbb0cb359302c133ec8d18d7d1a94e'
         'ee07cea6a2f3b351ea5f873c8a569fd6')

_architectures=(i686-w64-mingw32 x86_64-w64-mingw32)

pkgver() {
  cd "$srcdir/${_realname}"

  printf "%s" "$(git describe --long | sed 's/\([^-]*-\)g/r\1/;s/-/./g')"
}

prepare() {
  cd "$srcdir/${_realname}"

  patch -Np1 < '../0001-Use-PKG_CONFIG-when-running-g-ir-scanner.patch'
  #patch -Np1 < '../0002-Use-pkg-config-to-get-python2-flags.patch'
  #patch -Np1 < '../0003-Pass-to-python-the-proper-path-separator.patch'
  patch -Np1 < '../0004-Allow-overriding-of-dlltool-name.patch'
  patch -Np1 < '../0005-Allow-overriding-of-the-host-os-name.patch'
  patch -Np1 < '../0006-Remove-leading-SHELL-in-libtool-call.patch'
  patch -Np1 < '../0007-Assume-gcc-use-the-same-path-separator-as-python.patch'
  patch -Np1 < '../0008-Use-a-launcher-to-execute-g-ir-scanner.patch'
  patch -F3 -Np1 < '../0009-Allow-to-skip-the-check-for-Python-headers.patch'
  patch -Np1 < '../0010-Overcome-File-name-too-long-error.patch'
  patch -Np1 < '../0011-Customize-CCompiler-on-MinGW-cross-compilation.patch'

  NOCONFIGURE=1 ./autogen.sh

  # Clear environment trees created by wine
  rm -fr "$srcdir/win32" "$srcdir/win64"
}

build() {
  local tardir="$srcdir/${_realname}"
  local builddir
  local arch
  local bits

  # Force the use of the python-2 interpreter
  export PYTHON=/usr/bin/python2

  for arch in ${_architectures[@]}; do
    builddir="$tardir-build-$arch"
    mkdir -p "$builddir"
    cd "$builddir"

    # Build the python module with build == host
    "$tardir/configure" \
      --disable-silent-rules \
      --enable-shared \
      --enable-static
    make scannerparser.c _giscanner.la

    # Cross-compile the rest of the package inside a subshell so
    # there will not be environment variable leaks from $arch-configure.
    # The $arch-configure script comes from afm-mingw-w64-makedepends.
    (
      source $arch-configure "$tardir" \
        --host="$arch" \
        --disable-silent-rules \
        --enable-shared \
        --enable-static \
        --disable-doctool \
        --disable-giscanner

      # Avoid overriding what built with build == host
      make -t scannerparser.c _giscanner.la

      make INTROSPECTION_LAUNCHER="$INTROSPECTION_LAUNCHER"
    )
  done
}

package() {
  local arch
  local prefix

  for arch in ${_architectures[@]}; do
    prefix="$pkgdir/usr/$arch"

    cd "$srcdir/${_realname}-build-$arch"
    make DESTDIR="$pkgdir" install

    # Wrappers for running g-ir-compiler and g-ir-generate with wine
    sed \
      -e "s|@arch@|win$bits|g" \
      -e "s|@exe@|/usr/$arch/bin/g-ir-compiler.exe|g" \
      "$srcdir/winewrapper" > "$prefix/bin/g-ir-compiler"
    chmod 0755 "$prefix/bin/g-ir-compiler"
    sed \
      -e "s|@arch@|win$bits|g" \
      -e "s|@exe@|/usr/$arch/bin/g-ir-compiler.exe|g" \
      "$srcdir/winewrapper" > "$prefix/bin/g-ir-generate"
    chmod 0755 "$prefix/bin/g-ir-generate"

    # Substitute the wrappers to the exe in the pkg-config files
    sed -i \
      -e 's|g-ir-compiler.exe|g-ir-compiler|g' \
      -e 's|g-ir-generate.exe|g-ir-generate|g' \
      $prefix/lib/pkgconfig/gobject-introspection-1.0.pc

    find "$prefix" -regex '.*\.\(bat\|def\|exp\)' -exec rm -f {} +
    find "$prefix" -name '*.dll' -exec $arch-strip --strip-unneeded {} +
    find "$prefix" -name '*.a' -exec $arch-strip -g {} +
    rm -fr "$prefix/share/man"
    rm -fr "$prefix/share/aclocal"
  done
}

# vim:set ts=2 sw=2 et:
