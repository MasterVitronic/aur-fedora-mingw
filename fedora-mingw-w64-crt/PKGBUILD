# Maintainer: Nicola Fontana <ntd@entidi.it>
#
# Port of the Fedora package found at
# http://pkgs.fedoraproject.org/cgit/mingw-crt.git/

pkgname=fedora-mingw-w64-crt
pkgver=5904
pkgrel=1
pkgdesc='MinGW-w64 CRT for Windows'
arch=(any)
url='http://mingw-w64.sourceforge.net'
license=('custom')
groups=('fedora-mingw')
depends=('mingw-w64-binutils')
makedepends=('mingw-w64-headers' 'mingw-w64-gcc'
             svn autoconf automake libtool)
optdepends=()
provides=(mingw-w64-crt)
conflicts=(mingw-w64-crt)
replaces=()
backup=()
options=(!strip !buildflags !libtool)
source=('http://pkgs.fedoraproject.org/cgit/mingw-crt.git/plain/mingw-w64-workaround-ilockcxch-regression.patch?id=1bf1eb9c12998caae21d6355e6d959933843f8d4'
        'http://pkgs.fedoraproject.org/cgit/mingw-crt.git/plain/mingw-w64-commit-r5898.patch?id=1bf1eb9c12998caae21d6355e6d959933843f8d4')
md5sums=('757dc0ec3ee529678f0d796cc2f00c5e'
         'faf0728f212b670d4598462ca144c5c7')

_architectures=(i686-w64-mingw32 x86_64-w64-mingw32)
_svnmod='mingw-w64'
_svntrunk='svn://svn.code.sf.net/p/mingw-w64/code/trunk'

build() {
  local svndir="$srcdir/$_svnmod"
  local builddir
  local arch

  if [[ -d "$svndir/.svn" ]]; then
    cd "$_svnmod"
    svn up -r "$pkgver"
    svn revert -R .
  else
    cd "$srcdir"
    svn co "$_svntrunk" --config-dir ./ -r "$pkgver" "$_svnmod" && cd "$_svnmod"
  fi

  msg "SVN checkout done or server timeout"

  # Apply patches from fedora repository

  # Revert r5713 for now as it causes shared libraries
  # without an explicit exported symbols list (.def file) to
  # automatically export the symbol InterlockedCompareExchange.
  # This symbol is part of the Win32 API so it shouldn't
  # be exported again in individual shared libraries.
  # This issue only happens for the i686-w64-mingw32 target.
  # We reported this issue upstream on 2013-05-23 but we're
  # still waiting on a proper solution. To workaround it
  # we do a partial revert the commit in question for now
  patch -Np0 < '../mingw-w64-workaround-ilockcxch-regression.patch?id=1bf1eb9c12998caae21d6355e6d959933843f8d4'
  # Commit r5898 also introduced a similar regression
  # for the win64 target so also revert that one for now
  patch -RNp1 < '../mingw-w64-commit-r5898.patch?id=1bf1eb9c12998caae21d6355e6d959933843f8d4'

  autoreconf -if

  export CFLAGS='-O2 -pipe'
  export CXXFLAGS="$CFLAGS"
  unset  LDFLAGS
  unset  CPPFLAGS

  for arch in ${_architectures[@]}; do
    builddir="$srcdir/$pkgname-$pkgver-build-$arch"
    mkdir -p "$builddir"
    cd "$builddir"
    "$svndir/mingw-w64-crt/configure" \
      --prefix="/usr/$arch" \
      --host="$arch"
    make
  done
}

package() {
  local arch
  local prefix

  for arch in ${_architectures[@]}; do
    prefix="$pkgdir/usr/$arch"

    cd "$srcdir/$pkgname-$pkgver-build-$arch"
    make DESTDIR="$pkgdir" install

    find "$prefix" -regex '.*\.\(exe\|bat\|def\|exp\)' -exec rm -f {} +
    find "$prefix" -name '*.dll' -exec $arch-strip -xg {} +
    # libruntime.a is not a library: the following workaround will let
    # strip the other libraries without failing at libruntime.a
    find "$prefix" -name '*.a' -exec $arch-strip -g {} + 2> /dev/null || :
    rm -fr "$prefix/share"
  done
}

# vim:set ts=2 sw=2 et:
