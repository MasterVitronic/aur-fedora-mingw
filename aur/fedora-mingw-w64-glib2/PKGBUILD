# Maintainer: Nicola Fontana <ntd@entidi.it>
#
# Port of the Fedora package found at
# http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/

pkgname=$CARCH-mingw-w64-glib2
pkgver=2.53.4
pkgrel=1
pkgdesc='Common C routines used by GTK+ and other libs (mingw-w64)'
arch=(any)
url='http://www.gtk.org/'
license=(LGPL)
groups=(afm-$CARCH)
depends=(
    'mingw-w64-crt>=4'
    $CARCH-mingw-w64-libffi
    $CARCH-mingw-w64-zlib
    $CARCH-mingw-w64-gettext
    $CARCH-mingw-w64-pcre
)
makedepends=(
    afm-mingw-w64-makedepends
    'glib2>=2.31.20'
    'python2>=2.5.0'
    indent
)
source=("http://ftp.gnome.org/pub/GNOME/sources/glib/${pkgver%.*}/glib-$pkgver.tar.xz"
        "http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/plain/0001-Use-CreateFile-on-Win32-to-make-sure-g_unlink-always.patch?h=f18"
        "http://pkgs.fedoraproject.org/cgit/mingw-glib2.git/plain/glib-prefer-constructors-over-DllMain.patch?id=10ce51e70078f0c5b76d3ee1582d75e43f7f3363"
        "http://pkgs.fedoraproject.org/cgit/rpms/mingw-glib2.git/plain/0002-GNetworkMonitorBase-don-t-fail-when-IPv6-support-is-.patch?id=1853c99683008edb12d1f88f8a8e292eca95d3af")
md5sums=('0c6a74751df55cd55507e560569b5036'
         'c08c41118f5318d10f326c7c30e1a33a'
         '46969e815f3ab19582ba33667a52048b'
         '17dd5bee7eaea2ff881b7b879c494484')

prepare() {
  cd "$srcdir/glib-$pkgver"

  # https://bugzilla.gnome.org/show_bug.cgi?id=674214
  patch -Np1 < '../0001-Use-CreateFile-on-Win32-to-make-sure-g_unlink-always.patch?h=f18'

  # Prefer the use of GCC constructors over DllMain
  # This prevents having to depend on DllMain in static libraries
  # http://lists.fedoraproject.org/pipermail/mingw/2013-March/006429.html
  # http://lists.fedoraproject.org/pipermail/mingw/2013-March/006469.html
  # https://bugzilla.gnome.org/show_bug.cgi?id=698118
  patch -Np1 < '../glib-prefer-constructors-over-DllMain.patch?id=10ce51e70078f0c5b76d3ee1582d75e43f7f3363'

  # Don't segfault when IPv6 support is unavailable
  # https://bugzilla.gnome.org/show_bug.cgi?id=733338
  patch -Np1 < '../0002-GNetworkMonitorBase-don-t-fail-when-IPv6-support-is-.patch?id=1853c99683008edb12d1f88f8a8e292eca95d3af'
}

build() {
  local tardir="$srcdir/glib-$pkgver"
  local builddir="$tardir-build"

  # GLib can't build static and shared libraries in one go, so we build twice
  mkdir -p "$builddir-static"
  cd "$builddir-static"
  source $CHOST-configure "$tardir" \
    --disable-shared \
    --enable-static \
    --disable-silent-rules \
    --with-pcre=internal \
    --with-python=/usr/bin/python2
  make

  mkdir -p "$builddir-shared"
  cd "$builddir-shared"
  source $CHOST-configure "$tardir" \
    --enable-shared \
    --disable-static \
    --disable-silent-rules \
    --with-pcre=internal \
    --with-python=/usr/bin/python2
  make
}

package() {
  local builddir="$srcdir/glib-$pkgver-build"
  local prefix="$pkgdir/usr/$CHOST"

  # The shared version is the last installed so its glibconfig.h is the default one.
  # Developers using the static build of GLib need to add -DGLIB_STATIC_COMPILATION
  # and -DGOBJECT_STATIC_COMPILATION to their CFLAGS to avoid compile failures.
  cd "$builddir-static"
  make DESTDIR="$pkgdir" install
  cd "$builddir-shared"
  make DESTDIR="$pkgdir" install

  find "$prefix" -name '*.exe' -exec $CHOST-strip {} +
  find "$prefix" -name '*.dll' -exec $CHOST-strip --strip-unneeded {} +
  find "$prefix" -name '*.a'   -exec $CHOST-strip -g {} +

  rm -fr "$prefix/share/bash-completion"
  rm -fr "$prefix/share/gdb"
  rm -f  "$prefix/bin/gdbus-codegen"
  rm -fr "$prefix/lib/gdbus-2.0"
}

# vim:set ts=2 sw=2 et:
