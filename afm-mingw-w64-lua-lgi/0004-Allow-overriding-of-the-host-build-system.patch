From 08d3a130399dfcf1400de4919b592f82ee1cdf48 Mon Sep 17 00:00:00 2001
From: Nicola Fontana <ntd@entidi.it>
Date: Fri, 13 Mar 2015 14:57:28 +0100
Subject: [PATCH 4/4] Allow overriding of the host build system

When cross compiling, the build system is different from the host
system, so directly using `uname` is not an option.

Use the helper variable HOST_OS so it can be overriden when calling
make and leave the current command (uname -s) as its default value.
Better would be to use a full system triplet and rely on config.guess
(like autoconf does) but this would significantly increase the
complexity of the build system.
---
 lgi/Makefile   | 5 +++--
 tests/Makefile | 6 ++++--
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/lgi/Makefile b/lgi/Makefile
index b3e01ef..72a43be 100644
--- a/lgi/Makefile
+++ b/lgi/Makefile
@@ -6,6 +6,7 @@
 #
 
 PREFIX = /usr/local
+HOST_OS = $(shell uname -s | tr A-Z a-z)
 LUA_VERSION=5.1
 LUA_LIBDIR = $(PREFIX)/lib/lua/$(LUA_VERSION)
 LUA_SHAREDIR = $(PREFIX)/share/lua/$(LUA_VERSION)
@@ -15,12 +16,12 @@ GINAME = gobject-introspection-1.0
 PKGS = $(GINAME) gmodule-2.0 libffi
 VERSION_FILE = version.lua
 
-ifneq ($(filter CYGWIN% MSYS% MINGW%, $(shell uname -s)),)
+ifneq ($(filter cygwin% msys% mingw%, $(HOST_OS)),)
 CORE = corelgilua51.dll
 LIBFLAG = -shared
 LIBS += -llua
 else
-ifeq ($(shell uname -s),Darwin)
+ifeq ($(HOST_OS),darwin)
 CORE = corelgilua51.so
 LIBFLAG = -bundle -undefined dynamic_lookup
 CCSHARED = -fno-common
diff --git a/tests/Makefile b/tests/Makefile
index 693f47d..21b9caa 100644
--- a/tests/Makefile
+++ b/tests/Makefile
@@ -5,12 +5,14 @@
 # License: MIT
 #
 
-ifneq ($(filter CYGWIN% MSYS% MINGW%, $(shell uname -s)),)
+HOST_OS = $(shell uname -s | tr A-Z a-z)
+
+ifneq ($(filter cygwin% msys% mingw%, $(HOST_OS)),)
 EXT = .dll
 PFX = cyg
 LIBFLAG = -shared
 else
-ifeq ($(shell uname -s),Darwin)
+ifeq ($(HOST_OS),darwin)
 EXT = .so
 PFX = lib
 LIBFLAG = -bundle -undefined dynamic_lookup
-- 
2.3.2

